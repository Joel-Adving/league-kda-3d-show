/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
    nodes: {
        Object_2: THREE.SkinnedMesh
        mixamorigHips: THREE.Bone
    }
    materials: {
        Material__46: THREE.MeshStandardMaterial
    }
}

type ActionName = 'dance'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Ahri({ ...props }: JSX.IntrinsicElements['group']) {
    const group = useRef<THREE.Group>()
    const { nodes, materials, animations } = useGLTF('/models/ahri/model-transformed.glb') as GLTFResult
    //@ts-ignore
    const { actions } = useAnimations<GLTFActions>(animations, group)

    useEffect(() => {
        if (!actions) return
        //@ts-ignore
        actions.dance.play()
    }, [actions])

    return (
        //@ts-ignore
        <group ref={group} {...props} dispose={null}>
            <group name="Scene">
                <group name="Sketchfab_model" rotation={[-Math.PI / 2, 0, 0]}>
                    <group name="Ahri_KDAobjcleanermaterialmergergles" />
                </group>
                <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
                    <primitive object={nodes.mixamorigHips} />
                    <skinnedMesh
                        castShadow
                        name="Object_2"
                        geometry={nodes.Object_2.geometry}
                        material={materials.Material__46}
                        skeleton={nodes.Object_2.skeleton}
                    />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('/model-transformed.glb')
